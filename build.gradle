buildscript {
    repositories {
		maven { url = "https://maven.minecraftforge.net/" }
		maven { url = "https://files.minecraftforge.net/maven" }
		maven {
			name 'CleanroomMC Maven'
			url 'https://maven.cleanroommc.com'
		}
		mavenCentral()
    }
    dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:6.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'

version = "1.12.2-2.0.2.3"
group = "techguns" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "techguns"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
	mappings channel: 'snapshot', version: '20171003-1.12'
	// makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

	// Default run configurations.
	// These can be tweaked, removed, or duplicated as needed.
	runs {
		client {
			workingDirectory project.file('run')

			// Recommended logging data for a userdev environment
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

			// Recommended logging level for the console
			property 'forge.logging.console.level', 'debug'
		}

		server {

			// Recommended logging data for a userdev environment
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

			// Recommended logging level for the console
			property 'forge.logging.console.level', 'debug'
		}
	}
	accessTransformer=file("src/main/resources/META-INF/techguns_at.cfg")
}

repositories {
	maven {
		url 'https://repo.elytradev.com/'
	}
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "modmaven.k-4u.nl"
	}
	maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
	//ivy { name "com.latmod.mods"; artifactPattern "http://mods.latmod.com/[module]/[revision]/[module]-[revision](-[classifier]).[ext]" }
	maven { 
		name="Latmods"
		url = "https://maven.latmod.com/"
	}
	maven {
		name = "OpenComputers"
		url = "https://maven.cil.li/"
	}
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
	minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

	//implementation 'elucent:albedo:2.0-SNAPSHOT'
	//deobfCompile 'albedo:albedo:0.1.3:deobf'
	// implementation 'albedo:albedo:1.12.2:1.1.0'
	implementation files('libs/albedo-1.12.2-1.1.0.jar')
	// implementation 'crafttweaker:CraftTweaker2:1.12:4.1.13'
	implementation files('libs/CraftTweaker2-1.12-4.1.13.jar')
	//provided 'chisel:Chisel-MC1.12:0.0.14.18:api'
	//provided 'chisel:Chisel:MC1.12:0.0.14.18'
	
	// implementation 'the-lost-cities:lostcities:1.12:2.0.12'
	implementation files('libs/lostcities-1.12-2.0.12.jar')
	//implementation 'com.latmod.mods:FTBLib:4.2.5:api'
	implementation files('libs/FTBLib-5.4.0.64.jar')
	
	 // implementation against the JEI API but do not include it at runtime
	compileOnly fg.deobf("mezz.jei:jei_1.12.2:${jei_version}:api")
	// at runtime, use the full JEI jar
	runtimeOnly fg.deobf("mezz.jei:jei_1.12.2:${jei_version}")

	implementation files('libs/OpenComputers-MC1.12.2-1.7.5.192.jar')


}


jar {

	manifest {
		attributes 'FMLCorePlugin': "techguns.core.TechgunsFMLPlugin"
		attributes 'FMLCorePluginContainsFMLMod': "true"
		attributes 'FMLAT': 'techguns_at.cfg'
	}
}